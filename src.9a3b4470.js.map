{"version":3,"sources":["../node_modules/debounce/index.js","fetchCountries.js","index.js"],"names":["fetchCountries","countryName","fetch","then","resault","json","debounce","require","DEBOUNCE_DELAY","refs","input","document","querySelector","list","descr","onSearchCountry","e","target","value","trim","checkCountriesQuantity","countriesArrey","quantity","length","console","log","createMarkupForOneCountry","country","flags","name","capital","languages","population","langString","Object","values","join","markUp","png","official","innerHTML","addEventListener"],"mappings":";AAcA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,EAGA,SAAA,IACA,IAAA,EAAA,KAAA,MAAA,EAEA,EAAA,GAAA,GAAA,EACA,EAAA,WAAA,EAAA,EAAA,IAEA,EAAA,KACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,OAXA,MAAA,IAAA,EAAA,KAgBA,IAAA,EAAA,WACA,EAAA,KACA,EAAA,UACA,EAAA,KAAA,MACA,IAAA,EAAA,IAAA,EAOA,OANA,IAAA,EAAA,WAAA,EAAA,IACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAGA,GAoBA,OAjBA,EAAA,MAAA,WACA,IACA,aAAA,GACA,EAAA,OAIA,EAAA,MAAA,WACA,IACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,KAEA,aAAA,GACA,EAAA,OAIA,EAIA,EAAA,SAAA,EAEA,OAAA,QAAA;;;;ACjEC,aAJM,SAASA,EAAeC,GAGtBC,OAAAA,gDAFqDD,sDAEfE,KAAKC,GAAWA,EAAQC,QACtE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA;;ACmCA,aArCD,QAAA,oBACA,IAAA,EAAA,QAAA,uBAHIC,EAAWC,QAAQ,YAKvB,MAAMC,EAAiB,IAEjBC,EAAO,CACXC,MAAOC,SAASC,cAAc,eAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,MAAOH,SAASC,cAAc,kBAKhC,SAASG,EAAgBC,GACjBf,MAAAA,EAAce,EAAEC,OAAOC,MAAMC,QACpBlB,EAAAA,EAAAA,gBAAAA,GAAaE,KAAKiB,GAGnC,SAASA,EAAuBC,GACxBC,MAAAA,EAAWD,EAAeE,OAChCC,QAAQC,IAAIH,GACRA,EAAW,KACJA,GAAY,GAAKA,GAAY,GACtCE,QAAQC,IAAIH,GAEZI,EAA0BL,IAI9B,SAASK,EAA0BC,GAC3B,MAAA,MAAEC,EAAF,KAASC,EAAT,QAAeC,EAAf,UAAwBC,EAAxB,WAAmCC,GAAeL,EAAQ,GAG1DM,EADYC,OAAOC,OAAOR,EAAQ,GAAGI,WACdK,KAAK,MAC5BC,iBAAwBT,WAAeA,EAAMU,aAAaR,4BAAkCD,EAAKU,mCAAmCT,8BAAoCE,6BAAsCC,QAEpNxB,EAAKI,KAAK2B,UAAYH,EAzBxB5B,EAAKC,MAAM+B,iBAAiB,QAASnC,EAASS,EARvB","file":"src.9a3b4470.js","sourceRoot":"../src","sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","export function fetchCountries(countryName) {\n  const urlForSearch = `https://restcountries.com/v3.1/name/${countryName}`;\n  const urlFilter = 'fields=name,capital,population,flags,languages';\n  return fetch(`${urlForSearch}?${urlFilter}`).then(resault => resault.json());\n}\n","var debounce = require('debounce');\n\nimport './css/styles.css';\nimport { fetchCountries } from './fetchCountries.js';\n\nconst DEBOUNCE_DELAY = 300;\n\nconst refs = {\n  input: document.querySelector('#search-box'),\n  list: document.querySelector('.country-list'),\n  descr: document.querySelector('.country-info'),\n};\n\nrefs.input.addEventListener('input', debounce(onSearchCountry, DEBOUNCE_DELAY));\n\nfunction onSearchCountry(e) {\n  const countryName = e.target.value.trim();\n  fetchCountries(countryName).then(checkCountriesQuantity);\n}\n\nfunction checkCountriesQuantity(countriesArrey) {\n  const quantity = countriesArrey.length;\n  console.log(quantity);\n  if (quantity > 10) {\n  } else if (quantity >= 2 && quantity <= 10) {\n    console.log(quantity);\n  } else {\n    createMarkupForOneCountry(countriesArrey);\n  }\n}\n\nfunction createMarkupForOneCountry(country) {\n  const { flags, name, capital, languages, population } = country[0];\n\n  const langArray = Object.values(country[0].languages);\n  const langString = langArray.join(', ');\n  const markUp = `<img class='${flags}' src='${flags.png}' alt='${capital}' /><h1 class='country'>${name.official}</h1><p class='capital'>${capital}</p><p class='population'>${population}</p><p class='languages'>${langString}</p>`;\n\n  refs.list.innerHTML = markUp;\n}\n"]}